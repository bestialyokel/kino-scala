#1. Отобразите поля идентификатор ресторана, название, район и кухню для всех документов.
db.restaurants.find({}, {
	"name": 1, 
	"restaurant_id": 1, 
	"cuisine": 1
})

#2. Отобразите поля идентификатор ресторана, название, район и кухню, но исключите поле _id для всех документов
db.restaurants.find({}, {
	"name": 1, 
	"restaurant_id": 1,
	"cuisine": 1, 
	"_id": 0
})

#3. Отобразите все рестораны, которые находятся в районе Bronx.
db.restaurants.find({
	"borough": "Bronx"
})

#4. Отобразите следующие 5 ресторанов после пропуска первых 5, которые находятся в районе Bronx.
db.restaurants.find({
	"borough": "Bronx"
}).skip(5).limit(5)

#5. Найдите рестораны, набравшие более 90 баллов.
db.restaurants.find({
	"grades.score": {
		"$gt": 90
	}
})

#6. Найдите рестораны, которые набрали более 80, но менее 100 баллов
db.restaurants.find({
    "$and": [
		{
			"$expr": {
				"$gt": [
					{ "$min": "$grades.score" },
					80
				]
			},
		},
		{
			"$expr": {
				"$lt": [
					{ "$max": "$grades.score" },
					100
				]
			}
		}
	]
})

#7. Найдите рестораны, которые находятся по широте менее -95.754168.
db.restaurants.find({
	"$expr": {
		"$lt": [
			{ "$first": "$address.coord" },
			-95.754168
		]
	},
})

#8. Найдите рестораны, которые не готовят американскую кухню, 
# хотя бы раз набрали более 70 баллов и находятся по широте менее -65,754168.
db.restaurants.find({
	"$and": [
		{
			"cuisine": {
				"$not": {
					"$eq": "American "
				}
			}
		},
		{
			"$expr": {
				"$lt": [
					{ "$first": "$address.coord" },
					-65.754168
				]
			},
		},
		{
			"grades.score": {
				"$gt": 70
			},
		}
	]
})

#9. Найдите рестораны, которые не готовят американскую кухню, 
# набрали хотя бы один раз более 70 баллов 
# и находятся по долготе более 35.754168.
# Выполните запрос без использования оператора $and.
# ? (a and b and c) = !(!a or !b or !c)

db.restaurants.find({
	"$nor": [
		{
			"cuisine": {
				"$eq": "American "
			}
		},
		{
			"$expr": {
				"$lte": [
					{ "$arrayElemAt": [ "$address.coord", 1 ] },
					35.754168
				]
			},
		},
		{
			"grades.score": {
				"$lte": 70
			},
		}
	]
})

#10. Найдите рестораны, которые не готовят «американскую» кухню, 
# хотя бы раз получили оценку «А» и не принадлежат району Brooklyn. 
# Документы должны отображаться в соответствии с кухней в порядке убывания.

db.restaurants.find({
	"$and": [
		{
			"cuisine": {
				"$not": {
					"$regex": "American "
				}
			}
		},
		{
			"borough": {
				"$ne": "Brooklyn"
			}
		},
		{
			"grades.grade": "A"
		}
	]
}).sort({
	"cuisine": -1
})

#11. Найдите идентификатор ресторана, название, район и кухню для тех ресторанов, 
# которые в качестве первых трех букв в названии ресторана используют «Wil».

db.restaurants.find({
	"name": {
		"$regex": "Wil.*"
	}
}, {
	"restaurant_id": 1,
	"name": 1,
	"borough": 1,
	"cuisine": 1
})

#12. Найдите рестораны, которые относятся к району Bronx и готовят американские или китайские блюда.

db.restaurants.find({
	"borough": "Bronx",
	"cuisine": {
		"$in": ["American ", "Chinese"]
	}
})

#13. Найдите идентификатор ресторана, название, район и кухню для тех ресторанов, 
# которые относятся к районам Staten Island, Queens, Bronx или Brooklyn.

db.restaurants.find({
	"borough": {
		"$in": ["Bronx", "Staten Island", "Queens", "Bronx", "Brooklyn"]
	},
}, {
	"restaurant_id": 1,
	"name": 1,
	"borough": 1,
	"cuisine": 1
})


#14. Найдите идентификатор ресторана, название, район и кухню для тех ресторанов,
# которые не относятся к районам Staten Island, Queens, Bronx или Brooklyn.

db.restaurants.find({
	"borough": {
		"$not": {
			"$in": ["Bronx", "Staten Island", "Queens", "Bronx", "Brooklyn"]
		}
	},
}, {
	"restaurant_id": 1,
	"name": 1,
	"borough": 1,
	"cuisine": 1
})


#15. Найдите идентификатор ресторана, название, район и кухню для тех ресторанов, которые ни разу не набрали более 10 баллов.

db.restaurants.find({
	"grades.score": {
		"$not": {
			"$gt": 10
		}
	}
}, {
	"restaurant_id": 1,
	"name": 1,
	"borough": 1,
	"cuisine": 1
})

#16. Найдите идентификатор ресторана, название, район и кухню для тех ресторанов, 
# в которых готовят любую кухню, кроме американской и китайской, или название ресторана начинается с букв «Wil».

db.restaurants.find({
	"$or": [
		{
			"cuisine": {
				"$not": {
					"$in": ["American ", "Chinese"]
				}
			}
		},
		{
			"name": {
				"$regex": "Wil.*"
			}
		}
	]
},
{
	"restaurant_id": 1,
	"name": 1,
	"borough": 1,
	"cuisine": 1
})

#17. Найдите идентификатор ресторана, название и оценки для тех ресторанов,
# которые достигли оценки «А» и набрали 11 баллов по ISODate «2014-08-11T00:00:00Z».

db.restaurants.find({
	"grades.grade": "A",
	"grades.score": {
		"$gte": 11
	},
	"grades.date": {
		"$lte": new ISODate("2014-08-11T00:00:00Z")
	}

}, {
	"restaurant_id": 1,
	"name": 1,
	"grades": 1
})

#18. Найдите идентификатор ресторана, название и оценки для тех ресторанов, 
# где 2-й элемент массива оценок содержит оценку «А» и набрал 9 баллов по ISODate «2014-08-11T00:00:00Z».

db.restaurants.find({
	"$expr": {
		"$and": [
			{
				"$eq": [
					{ "$arrayElemAt": [ "$grades.grade", 1 ] },
					"A"
				]
			},
			{
				"$gte": [
					{ "$arrayElemAt": [ "$grades.score", 1 ] },
					9
				]
			},
			{
				"$lte": [
					{ "$arrayElemAt": [ "$grades.date", 1 ] },
					new ISODate("2014-08-11T00:00:00Z")
				]
			}
		]
	}
	
}, {
	"restaurant_id": 1,
	"name": 1,
	"grades": 1
})

#19. Напишите запрос, 
# чтобы расположить название кухни в порядке возрастания, 
# а для этой же кухни район должен быть в порядке убывания.

db.restaurants.find({}).sort({
	"cuisine": 1,
	"borough": -1
})

#20. Напишите запрос, чтобы узнать, есть ли рестораны у которых нету улицы. Нужно вывести число таких ресторанов.

db.restaurants.find({
	"address.street": {
		"$exists": false
	}
}).count()

#21. Найдите идентификатор ресторана, название и оценки для тех ресторанов,
# которые возвращают 0 в качестве остатка после деления баллов на 7.

db.restaurants.find({
	"grades.score": {
		"$mod": [7, 0]
	}
}, {
	"restaurant_id": 1,
	"name": 1,
	"grades": 1,
})

#22. Напишите запрос, чтобы найти название ресторана, район, координаты и кухню для тех ресторанов, 
# в которых где-то в названии есть последовательность букв «mon».

db.restaurants.find({
	"name": {
		"$regex": ".*mon.*"
	}
}, {
	"name": 1,
	"borough": 1,
	"address": 1
})

#23. Напишите запрос, чтобы найти название ресторана, район, координаты и кухню для тех ресторанов, 
# в которых первые три буквы названия - «Mad».

db.restaurants.find({
	"name": {
		"$regex": "Mad.*"
	}
}, {
	"name": 1,
	"borough": 1,
	"address.coord": 1
})