<?xml version="1.0" encoding="UTF-8" ?>

<!-- https://www.playframework.com/documentation/latest/SettingsLogger -->

<!DOCTYPE configuration>

<configuration>
    <import class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"/>
    <import class="ch.qos.logback.classic.AsyncAppender"/>
    <import class="ch.qos.logback.core.FileAppender"/>
    <import class="ch.qos.logback.core.ConsoleAppender"/>

    <appender name="FILE" class="FileAppender">
        <file>${application.home:-.}/logs/application.log</file>
        <encoder class="PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) %cyan(%logger{36}) %magenta(%X{pekkoSource}) %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ConsoleAppender">
        <!--
             On Windows, enabling Jansi is recommended to benefit from color code interpretation on DOS command prompts,
             which otherwise risk being sent ANSI escape sequences that they cannot interpret.
             See https://logback.qos.ch/manual/layouts.html#coloring
        -->
        <!-- <withJansi>true</withJansi> -->
        <encoder class="PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) %cyan(%logger{36}) %magenta(%X{pekkoSource}) %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ASYNCFILE" class="AsyncAppender">
        <appender-ref ref="FILE"/>
    </appender>

    <appender name="ASYNCSTDOUT" class="AsyncAppender">
        <appender-ref ref="STDOUT"/>
    </appender>

    <!-- Configure the Sentry appender, overriding the logging threshold to the WARN level -->
    <appender name="Sentry" class="io.sentry.logback.SentryAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <!-- Optionally add an encoder -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="play" level="INFO"/>
    <logger name="application" level="DEBUG"/>
    <logger name="com.zaxxer.hikari" level="WARN" />

    <root level="${SLICK_LOG_LEVEL:-INFO}">
        <appender-ref ref="STDOUT" />
    </root>

    <logger name="slick.basic.BasicBackend.action"          level="${log_action:-inherited}" />
    <logger name="slick.basic.BasicBackend.stream"          level="${log_stream:-inherited}" />
    <logger name="slick.compiler"                           level="OFF" />
    <logger name="slick.compiler.QueryCompiler"             level="OFF" />
    <logger name="slick.compiler.QueryCompilerBenchmark"    level="OFF" />
    <logger name="slick.jdbc.DriverDataSource"              level="${log_jdbc_driver:-inherited}" />
    <logger name="slick.jdbc.JdbcBackend.statement"         level="${log_jdbc_statement:-inherited}" />
    <logger name="slick.jdbc.JdbcBackend.parameter"         level="${log_jdbc_parameter:-inherited}" />
    <logger name="slick.jdbc.JdbcBackend.benchmark"         level="${log_jdbc_bench:-inherited}" />
    <logger name="slick.jdbc.StatementInvoker.result"       level="${log_jdbc_result:-inherited}" />
    <logger name="slick.jdbc.JdbcModelBuilder"              level="${log_createModel:-inherited}" />
    <logger name="slick.memory.HeapBackend"                 level="${log_heap:-inherited}" />
    <logger name="slick.memory.QueryInterpreter"            level="${log_interpreter:-inherited}" />
    <logger name="slick.relational.ResultConverterCompiler" level="${log_resultConverter:-inherited}" />
    <logger name="slick.util.AsyncExecutor"                 level="${log_asyncExecutor:-inherited}" />

    <!-- TODO SET WARN -->
    <root level="WARN">
        <appender-ref ref="ASYNCFILE"/>
        <appender-ref ref="ASYNCSTDOUT"/>
        <appender-ref ref="Sentry" />
    </root>

</configuration>
